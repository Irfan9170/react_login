[{"F:\\ReactLearning\\1\\login\\src\\index.js":"1","F:\\ReactLearning\\1\\login\\src\\App.js":"2","F:\\ReactLearning\\1\\login\\src\\components\\Home\\Home.js":"3","F:\\ReactLearning\\1\\login\\src\\components\\Login\\Login.js":"4","F:\\ReactLearning\\1\\login\\src\\components\\Jokes\\Jokes.js":"5","F:\\ReactLearning\\1\\login\\src\\components\\MainHeader\\MainHeader.js":"6","F:\\ReactLearning\\1\\login\\src\\components\\MainHeader\\Navigation.js":"7","F:\\ReactLearning\\1\\login\\src\\components\\UI\\Card\\Card.js":"8","F:\\ReactLearning\\1\\login\\src\\components\\UI\\Button\\Button.js":"9"},{"size":249,"mtime":1626710365823,"results":"10","hashOfConfig":"11"},{"size":1582,"mtime":1629722760505,"results":"12","hashOfConfig":"11"},{"size":381,"mtime":1629710646362,"results":"13","hashOfConfig":"11"},{"size":3608,"mtime":1629732432367,"results":"14","hashOfConfig":"11"},{"size":943,"mtime":1629732635406,"results":"15","hashOfConfig":"11"},{"size":360,"mtime":1626705955933,"results":"16","hashOfConfig":"11"},{"size":466,"mtime":1629710137034,"results":"17","hashOfConfig":"11"},{"size":218,"mtime":1616577728000,"results":"18","hashOfConfig":"11"},{"size":353,"mtime":1616577728000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1uo2enr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"F:\\ReactLearning\\1\\login\\src\\index.js",[],["41","42"],"F:\\ReactLearning\\1\\login\\src\\App.js",["43","44"],"import React, { useState,useEffect } from 'react';\nimport {Route,Switch,Redirect,useHistory} from 'react-router-dom'\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport Jokes from './components/Jokes/Jokes'\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  \n  const history = useHistory();\n\n  const loginHandler = (username, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('login','1');\n    setIsLoggedIn(true);\n  };\n  useEffect(() => {\n    \n    const userInformation = localStorage.getItem('login');\n    if(userInformation==='1'){\n      setIsLoggedIn(true);\n    }\n  }, [])\n\n  const logoutHandler = () => {\n    localStorage.removeItem('login')\n    setIsLoggedIn(false);\n    history.replace('/login')\n  };\n\n  return (\n    <React.Fragment>\n      <main>\n      {/* <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} /> */}\n     \n           <Route path='/' exact >\n             <Redirect  to = \"/login\"/>\n           </Route>\n          <Route path=\"/login\" >\n          {!isLoggedIn && <Login onLogin={loginHandler} />}\n          </Route>\n          <Route path=\"/dashboard\" exact>\n          {isLoggedIn && <Home onLogout={logoutHandler} />}\n          </Route>\n          <Route path=\"/jokes\" exact>\n               <Jokes onLogout={logoutHandler} />\n          </Route>\n       \n        \n        \n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","F:\\ReactLearning\\1\\login\\src\\components\\Home\\Home.js",[],"F:\\ReactLearning\\1\\login\\src\\components\\Login\\Login.js",[],"F:\\ReactLearning\\1\\login\\src\\components\\Jokes\\Jokes.js",["45"],"import React,{useEffect,useState} from 'react';\r\nimport axios from 'axios'\r\nimport MainHeader from '../MainHeader/MainHeader';\r\nimport Card from '../UI/Card/Card';\r\nimport classes from './Joke.module.css'\r\n\r\nconst Jokes = (props)=>{\r\n   const [jokes,setJokes]=useState([]);\r\n   const [isLoading,setLoading]=useState(false);\r\n   useEffect(async() => {\r\n      setLoading(true);\r\n           const response = await axios.get('https://official-joke-api.appspot.com/jokes/ten');\r\n                const data = await response.data;\r\n               setJokes(data)\r\n      setLoading(false)\r\n   }, [])\r\n\r\n   // console.log(props)\r\n    return(\r\n       <>\r\n       <Card className={classes.home}>\r\n      <MainHeader onLogout={props.onLogout} />\r\n      \r\n\r\n      \r\n     \r\n        {isLoading && <h1>Loading..</h1>}\r\n        {jokes.map(joke=>{ return <p key={joke.id}>{joke.setup}</p>})}\r\n      \r\n      </Card>\r\n      </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Jokes;","F:\\ReactLearning\\1\\login\\src\\components\\MainHeader\\MainHeader.js",[],"F:\\ReactLearning\\1\\login\\src\\components\\MainHeader\\Navigation.js",[],"F:\\ReactLearning\\1\\login\\src\\components\\UI\\Card\\Card.js",[],"F:\\ReactLearning\\1\\login\\src\\components\\UI\\Button\\Button.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":2,"column":15,"nodeType":"52","messageId":"53","endLine":2,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":10,"column":14,"nodeType":"57","endLine":16,"endColumn":5},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'MainHeader' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]